
# Add this script onto your file ~/.gitconfig and boom
# Editable by (c) Hilmi 2023
# Source: https://gist.github.com/erikw/654386d35ecfdb0354cd2b71763f19ae
# commit-status: generate a commit with message from git-status (staged changes).
[alias]
        # Explanation:
        # - Get only staged changes
        # - Ignore changes in working area (2nd letter, the Y in XY as explained in $(git help status))
        # - + split label and file path to separate lines so we can process the labels separately
        # - Keep only the first label using awk
        # - Add newline before each label section so we later can truncate \n to put everything on one line
        # - Make labels human readable e.g. M -> Modified
        # - Put everything on one line and trim leading & trailing whitespaces
        commit-status = !"TMPFILE=$(mktemp /tmp/git-commit-status-message.XXX); \
                git status --porcelain \
                | sort \
                | sed -re '/^\\?\\?[[:space:]]/d' -e '/^[[:space:]]+[[:upper:]]/d' \
                | sed -re 's/^([[:upper:]]+)[[:space:]]+/\\1:\\n/g' \
                | awk '!x[$0]++' \
                | sed -re 's/^([[:upper:]]+:)[[:space:]]+/\\1 /g' \
                | sed -re 's/^([[:upper:]]*)M[[:upper:]]*:$/\\1 Modified: /g' \
                | sed -re 's/^([[:upper:]]*)R[[:upper:]]*:$/\\1 Renamed: /g' \
                | sed -re 's/^([[:upper:]]*)A[[:upper:]]*:$/\\1 Added: /g' \
                | sed -re 's/^([[:upper:]]*)D[[:upper:]]*:$/\\1 Deleted: /g' \
                | sed -re 's/^([[:upper:]]*)T[[:upper:]]*:$/\\1 File Type Changed: /g' \
                | tr '\n' ' ' \
                | sed -re 's/(^|[[:alpha:]]+:[[:space:]])[[:space:]]*/\\1/g' > $TMPFILE; \
                cat $TMPFILE; \
                echo; \
                commit=''; \
                while :; do \
                        echo '> Commit with this message? [Yn]: '; \
                        read commit; \
                        ([ -z \"$commit\" ] || [ \"$commit\" = y ] || [ \"$commit\" = Y ] || [ \"$commit\" = n ]) && break; \
                done; \
                if [ \"$commit\" != n ]; then \
                        git commit -F $TMPFILE; \
                fi; \
                rm -f $TMPFILE"
